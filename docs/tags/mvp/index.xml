<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MVP on LFortran</title>
    <link>https://lfortran.org/tags/mvp/</link>
    <description>Recent content in MVP on LFortran</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Sep 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://lfortran.org/tags/mvp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LFortran Minimum Viable Product (MVP)</title>
      <link>https://lfortran.org/blog/2021/09/lfortran-minimum-viable-product-mvp/</link>
      <pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://lfortran.org/blog/2021/09/lfortran-minimum-viable-product-mvp/</guid>
      <description>&lt;p&gt;After a little over 2 years from our initial &lt;a href=&#34;https://lfortran.org/blog/2019/04/why-we-created-lfortran/&#34;&gt;announcement&lt;/a&gt;, we are releasing&#xA;LFortran MVP today.&lt;/p&gt;&#xA;&lt;p&gt;We have set our goal to release MVP in September 2021. We were initially hoping&#xA;to compile at least some production codes for MVP. While we did not quite get&#xA;there yet, after wrapping up and documenting where we are and writing a demo&#xA;Fortran project that works with the MVP, it turns out LFortran is already quite&#xA;usable and it can compile quite a lot of computational Fortran code if you are&#xA;willing to work around some of the current limitations. In this blog post we&#xA;will describe in detail the current status of LFortran.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
