<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arrays on LFortran</title>
    <link>https://lfortran.org/tags/arrays/</link>
    <description>Recent content in Arrays on LFortran</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://lfortran.org/tags/arrays/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LFortran: the Fastest Open-Source Compiler in Compile-Time Evaluation of an Array Benchmark</title>
      <link>https://lfortran.org/blog/2024/06/lfortran-the-fastest-open-source-compiler-in-compile-time-evaluation-of-an-array-benchmark/</link>
      <pubDate>Tue, 04 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://lfortran.org/blog/2024/06/lfortran-the-fastest-open-source-compiler-in-compile-time-evaluation-of-an-array-benchmark/</guid>
      <description>&lt;p&gt;After successful &lt;a href=&#34;https://lfortran.org/blog/2024/04/lfortran-compiles-fortran-stdlib/&#34;&gt;compilation of &lt;code&gt;stdlib&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://lfortran.org/blog/2024/05/fortran-on-web-using-lfortran/&#34;&gt;Fortran On Web Using LFortran&lt;/a&gt;, we focused on improving the support for compile time computation and we are excited to announce that LFortran can now compile the example from the &lt;a href=&#34;https://fortran-lang.discourse.group/t/computing-at-compile-time/3044&#34;&gt;Computing at compile time&lt;/a&gt; Fortran Discourse topic.&lt;/p&gt;&#xA;&lt;p&gt;This example can be used to benchmark the speed of compilation and compile-time array evaluation by increasing the size of the arrays. On this particular example LFortran outperforms other open-source Fortran compilers by an order of magnitude for large array sizes. For small array sizes each compiler has a different constant overhead, which becomes negligible for large arrays and this benchmark measures how quickly the compiler can internally apply the symbolic function on a large array numerically.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
